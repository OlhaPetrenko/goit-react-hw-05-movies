{"version":3,"file":"static/js/674.e753b9ca.chunk.js","mappings":"uKACA,MAAsB,oB,SCgBtB,MAdA,YAA2C,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC7B,OACE,mBAAQF,KAAMA,EAAMG,UAAWC,EAAOF,QAASA,EAA/C,SACGD,GAGN,C,8ECRD,EAAuB,yB,SCIvB,SAASI,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OACdC,GAAWC,EAAAA,EAAAA,MAEXC,EAAaH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,MAAOW,EAAd,EAAcA,KAAd,OAC5B,eAAIT,UAAWC,EAAf,UACE,UAAC,KAAD,CAAMS,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMR,GAAzC,UACGN,EADH,IACWW,MAFeD,EADA,IAQ9B,OAAO,wBAAKF,GACb,CAEDJ,EAAWW,aAAe,CACxBV,OAAQ,IAaV,O,8JChCA,EAAwB,0BAAxB,EAAyD,yB,SC4CzD,MAvCA,YAAmC,IAAbW,EAAY,EAAZA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,+BACE,kBAAMH,SAbV,SAAsBI,GACpBA,EAAMC,iBAEe,KAAjBH,EAAMI,QAIVN,EAASE,GACTC,EAAS,KAJPI,MAAM,6EAKT,EAIiCrB,UAAWC,EAAzC,WACE,kBACEJ,KAAK,OACLY,KAAK,QACLa,MAAON,EACPO,YAAY,qGACZC,SAxBR,SAAsBN,GACpBD,EAASC,EAAMO,cAAcH,MAAMI,cAEpC,EAsBO1B,UAAWC,KAEb,SAAC0B,EAAA,EAAD,CAAQ9B,KAAK,SAASC,MAAM,6CAInC,E,oBC/BK8B,EAAU,+BACVC,EAAM,mCAqDZ,MAnDA,WAAuB,IAAD,EACpB,GAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAe2B,EAAf,KACA,GAA4Bf,EAAAA,EAAAA,UAAS,QAArC,eAAOgB,EAAP,KAAeC,EAAf,KACA,GAA0BjB,EAAAA,EAAAA,UAAS,MAAnC,eAAOkB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GA6B/C,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,oGAEIR,EAAU,WAFd,SAI2BS,IAAAA,IAAA,WACjBb,EADiB,kCACgBC,EADhB,wCACmDS,IAL9E,OAIUI,EAJV,OAQIZ,EAAUY,EAASC,KAAKC,SACxBZ,EAAU,YATd,gDAWIE,EAAS,EAAD,IACRF,EAAU,YAZd,0DAJc,sBACTM,GADS,mCAmBdO,EACD,GAAE,CAACP,KAGF,6BACE,SAAC,EAAD,CAAYxB,SA7BU,SAAAE,GAExBqB,EAD6B,KAAVrB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,IA2Be,YAAXe,IACC,eAAI/B,UAAWC,EAAAA,EAAAA,KAAf,iMAEU,aAAX8B,GAA2C,IAAlB5B,EAAO2C,SAC/B,SAAC5C,EAAA,EAAD,CAAYC,OAAQA,IAEV,aAAX4B,GAA2C,IAAlB5B,EAAO2C,SAC/B,2RAEU,aAAXf,IAAyB,wBAAKE,EAAMc,YAG1C,C,qBC3DD,KAAgB,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,KAAO,0B","sources":["webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","webpack://goit-react-hw-05-movies/./src/components/TrendMovies/TrendMovies.module.css?908b"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Btn\":\"Button_Btn__cWlfc\"};","import PropTypes from 'prop-types';\n\nimport s from './Button.module.css';\nfunction Button({ type, title, onClick }) {\n  return (\n    <button type={type} className={s.Btn} onClick={onClick}>\n      {title}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"MoviesList_Item__6qotj\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './MoviesList.module.css';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  const moviesItem = movies.map(({ id, title, name }) => (\n    <li className={s.Item} key={id}>\n      <Link to={`/movie/${id}`} state={{ from: location }}>\n        {title} {name}\n      </Link>\n    </li>\n  ));\n\n  return <ul>{moviesItem}</ul>;\n}\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n\nMoviesList.propTypes = {\n  contamoviescts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"Input\":\"SearchForm_Input__C5DWT\",\"Form\":\"SearchForm_Form__vRFa9\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button/Button';\nimport s from './SearchForm.module.css';\n\nfunction SearchForm({ onSubmit }) {\n  const [query, setQuery] = useState('');\n  function handleChange(event) {\n    setQuery(event.currentTarget.value.toLowerCase());\n    // console.log(event.currentTarget.value.toLowerCase());\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Введіть запит!');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.Form}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          placeholder=\"Введи назву фільму\"\n          onChange={handleChange}\n          className={s.Input}\n        />\n        <Button type=\"submit\" title=\"Знайти\" />\n      </form>\n    </>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSearchParams } from 'react-router-dom';\n\nimport SearchForm from '../components/SearchForm/SearchForm';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport s from '../components/TrendMovies/TrendMovies.module.css';\n\nconst BASEURL = 'https://api.themoviedb.org/3';\nconst KEY = '5b0447e2e1e726ae474ba46ec861fdf3';\n\nfunction MoviesPage() {\n  const [movies, setMovies] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryName = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (!queryName) {\n      return;\n    }\n    async function findMovies() {\n      try {\n        setStatus('pending');\n\n        const response = await axios.get(\n          ` ${BASEURL}/search/movie/?api_key=${KEY}&language=en-US&page=1&query=${queryName}`\n        );\n\n        setMovies(response.data.results);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    }\n    findMovies();\n  }, [queryName]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={updateQueryString} />\n      {status === 'pending' && (\n        <h2 className={s.Load}>Відбувається завантаження даних...</h2>\n      )}\n      {status === 'resolved' && movies.length !== 0 && (\n        <MoviesList movies={movies} />\n      )}\n      {status === 'resolved' && movies.length === 0 && (\n        <h2> На жаль, інформація щодо Вашого запиту відсутня :-(((</h2>\n      )}\n      {status === 'rejected' && <h1>{error.message}</h1>}\n    </main>\n  );\n}\n\nexport default MoviesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"Card\":\"TrendMovies_Card__60DcF\",\"List\":\"TrendMovies_List__rJfHX\",\"Link\":\"TrendMovies_Link__omoGN\",\"Active\":\"TrendMovies_Active__cBDAG\",\"Load\":\"TrendMovies_Load__oToN+\"};"],"names":["type","title","onClick","className","s","MoviesList","movies","location","useLocation","moviesItem","map","id","name","to","state","from","defaultProps","onSubmit","useState","query","setQuery","event","preventDefault","trim","alert","value","placeholder","onChange","currentTarget","toLowerCase","Button","BASEURL","KEY","setMovies","status","setStatus","error","setError","useSearchParams","searchParams","setSearchParams","queryName","get","useEffect","axios","response","data","results","findMovies","length","message"],"sourceRoot":""}